import{_ as p,r as i,o as l,c as o,a as n,d as a,b as t,e as s}from"./app.03dbfb22.js";const c="/assets/dcamp-backend-ai-5.21c14465.webp",u="/assets/dcamp-backend-ai-4.adfd6bf9.webp",r="/assets/dcamp-backend-ai-1.bb067eff.webp",d="/assets/dcamp-backend-ai-2.12f0e11f.webp",m="/assets/dcamp-backend-ai-3.ce8f226b.webp",k={},h=s('<h1 id="ai-deep-learning" tabindex="-1"><a class="header-anchor" href="#ai-deep-learning" aria-hidden="true">#</a> AI &amp; DEEP LEARNING</h1><h3 id="backend-ai" tabindex="-1"><a class="header-anchor" href="#backend-ai" aria-hidden="true">#</a> Backend.AI</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>AI &amp; DEEP LEARNING 을 모르고 &quot;피할 수 없으면 즐겨라!&quot; 라고 하여 lablup 세미나에 온 기록입니다. 횡성 수설 하니까 양해 바랍니다</p></div><h4 id="wrming-up-텐서플로-공식-예제를-돌려-보자-backend-ai-에-올려서" tabindex="-1"><a class="header-anchor" href="#wrming-up-텐서플로-공식-예제를-돌려-보자-backend-ai-에-올려서" aria-hidden="true">#</a> wrming up - 텐서플로 공식 예제를 돌려 보자 -&gt; Backend.AI 에 올려서</h4>',4),b=n("li",null,[n("p",null,"Backend.AI 빠르다 무료여도 코랩에 비해 제약사항이 없다.")],-1),g={href:"https://docs.google.com/presentation/d/1fECgbTgVatpjV2AA0qBcbUX9lJNo_Vnp0-b68VR4BMY/edit#slide=id.p",target:"_blank",rel:"noopener noreferrer"},v=n("img",{width:"803",alt:"image",src:"https://user-images.githubusercontent.com/10396850/204970064-f14b7e68-ca0f-47c8-b23c-0539eff42dfb.png"},null,-1),_=s('<li><p>Cheat Sheet <img width="1187" alt="image" src="https://user-images.githubusercontent.com/10396850/204970154-b066bab8-1e78-4c95-9863-66ad6a2b14a0.png"></p></li><li><p>tensorflow 는 2.x 에서 많은 변화가 있었다. keras 공식 API 를 정식 도입하면서 코드양이 1/10 줄어 들고 쉬워졌다.</p></li><li><p>연구자는 파이토치 / 현업에서는 tensorflow 가 좀더 많이 사용하는 추세이다.</p></li><li><p>255 로 나무면 0과 1사이로 만들어 준다</p></li><li><p>왜 0과 1사이로 만드나 - 민맥스 스케일링 해주면 성능이 좋아진다</p></li><li><p>Ordinal vs One-hot encoding(원핫인코딩)기법</p></li><li><p>tf.keras.layers.Flatten(input_shape=(28, 28)) -&gt; Flatten 1차원 형태로 이미지를 넣어주면 어떤 단점이 있을까? 위치정보를 다 잃어 버려서 정보를 소실되고 이미지 데이터의 경우 양이 많이진다. - 그래서 CNN 을 쓴다 - ( 일단 적어 본다 나는 모른다 멋있는 말 인듯 하다 / 피할수없으면즐기자 )</p></li><li><p>Flatten 해서 1차원으로 펴서 넣는걸 - 풀리커넥트디 ... 라고 한다.</p></li><li><p>짜장면 짬뽕 뭐 먹을꺼냐? 아무거나 - 최약이야!</p></li>',9),f=s(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>optimizer<span class="token operator">=</span><span class="token string">&#39;adam&#39;</span><span class="token punctuation">,</span> <span class="token comment"># 적당하게 러닝메이트를 찾아 가야 한다. 어떤 식으로 오차를 측정(Crossentropy) 할 때 적당한(?) 빠르게 천천히 방향과 속도를 적절하게 - 이중 아담은 base line 이상은 얻은 수 있다. 가장 무난하다.</span>
              loss<span class="token operator">=</span>tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>SparseCategoricalCrossentropy<span class="token punctuation">(</span>from_logits<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 실값고 예측값이 얼마나 틀렸나? 웨이트와 바이어스 값을 찾을때 어떻게 평가할거냐? Crossentropy 라는 것은 얼마나 순수하냐? 0에 가까우면 아무 것도 안 섞임</span>
              metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;accuracy&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 평가 할때는 accuracy 를 사용하겠다.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w={href:"https://noworry.kr",target:"_blank",rel:"noopener noreferrer"},x=n("li",null,[n("p",null,[a("Softmax - 다 더하면 1이 됨 "),n("img",{width:"739",alt:"image",src:"https://user-images.githubusercontent.com/10396850/204973839-dfbfdb82-d075-4608-931b-b1b790862c6a.png"})])],-1),y=s('<h4 id="말라리아-도말-분류" tabindex="-1"><a class="header-anchor" href="#말라리아-도말-분류" aria-hidden="true">#</a> 말라리아 도말 분류</h4><ul><li><p>말라리아 셀 현미경 이미지</p></li><li><p>공공 데이터다</p></li><li><p>01_malaria_image_PIL_OpenCV.ipynb</p></li><li><p>SIGMOID - 0에 가까우면 감염되지 않음 1에 가까우면 감염되엇다 - 현미경 이미지를 보고 파악</p></li><li><p>SIGMOID 는 활성화 함수로 쓸때 양족 끝에 기울기가 0인 곳이 있다보니 ... 그 과정이 미분 ... 그라디언트 ( 아 T T ) <img width="1260" alt="image" src="https://user-images.githubusercontent.com/10396850/204975117-17690e42-d5be-47a2-8e31-e274bb99b388.png"></p></li><li><p>activation 활성화 함수 예전에는 SIGMOID 많이 사용 기울기소실이라는 문제가 있다. relu 가 대안 하지만 비슷한 문제가 없는건 아니다.</p></li><li><p>바이너리 클래스픽케이션 할때</p></li><li><p>png 이미지 count <img width="733" alt="image" src="https://user-images.githubusercontent.com/10396850/204978045-b3f3f5b1-ade8-497c-9049-978e019d9be0.png"></p></li><li><p>감염된 이미지는 점이 찍혀있다. 정상은 깨끗하다.</p></li><li><p>아래에서 3 3개의 채널 - RGB 를 뜻한다. 0~255 <img width="261" alt="image" src="https://user-images.githubusercontent.com/10396850/204978398-5ad04e1f-41ca-4d2b-9a04-7ebdcfde36e8.png"></p></li><li><p>PIL - 포토샵에서 가능한 리사이징 윤각보정 마스킹처리 등등을 해주는 파이썬 라이브러리다. 특징 학습을 위해 윤각선을 따거나 필터를 사용이 가능하다. 다는 것은 openCV 라는것도 있다.</p></li><li><p>PIL / openCV 는 딥러닝 라이브러이에서 기본으로 제공하고 있다. 좀더 디테일한 처리를 원한다면 별도로 사용 가능</p></li><li><p>openCV 는 RGB 사용 안하고 BGR 을 사용한다</p></li></ul><h4 id="실습" tabindex="-1"><a class="header-anchor" href="#실습" aria-hidden="true">#</a> 실습</h4>',3),I=s('<li><p>딥러닝은 비정형을 주로 다룬다</p></li><li><p>데이터셋 나누기 - 우리가 이미지를 하나 하나 갖고와 넘파이로 넣어서 하나 하나 전처리 가능하지만 텐서플로우 제공</p></li><li><p>CNN - 이지미 전처러 기능을 갖고 있는 층이 따로 있다. 컨블루션 과정</p></li><li><p>풀리케넥트 - 일차원 펴는 순간 주변 정보를 읽어 버리는 단점이 있다</p></li><li><p>Backend.AI 는 google colab 대비 파일이 삭제 되지 않는 이상 세션별로 노트북을 다시 불러오지 않아도 된다</p></li><li><p>학술적 이미지로 <img width="1012" alt="image" src="https://user-images.githubusercontent.com/10396850/204981165-79b1ea12-b343-4791-8d64-b5313e00212b.png"></p></li><li><p>정상 / 감염 - 세포에 쩜이 찍혀있다. <img width="987" alt="image" src="https://user-images.githubusercontent.com/10396850/204981971-4825f7d4-81cb-4d82-bd95-b293996c0646.png"></p></li>',7),C={href:"https://artlab.ai/",target:"_blank",rel:"noopener noreferrer"},N=n("li",null,[n("p",null,"Fill in the blanks")],-1),D=s(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># ImageDataGenerator 를 통해 이미지를 로드하고 전처리 합니다.</span>
<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>preprocessing<span class="token punctuation">.</span>image <span class="token keyword">import</span> _____________<span class="token operator">*</span><span class="token number">1</span>

<span class="token comment"># validation_split 값을 통해 학습:검증 비율을 8:2 로 나눕니다.</span>
datagen <span class="token operator">=</span> _____________<span class="token punctuation">(</span>rescale<span class="token operator">=</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">255.0</span><span class="token punctuation">,</span> validation_split<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>이미지 사이즈는? 적절하게 ... 속도 / 성능 / 압축</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 원본 이미지는 100~200 내외입니다.
# 큰것이 좋을까? 작은것이 좋을까? 상황에 따라 다르다.
# 작은건 어떨때 좋을까? - 이미지가 아주 많아서 사이즈를 줄여 줌으로 baseline 만들때 속도가 단축된다
# 크면? 연산 속도가 오래 걸린다
# 절절하게 ...
height = ?
width = ?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="학습-세트" tabindex="-1"><a class="header-anchor" href="#학습-세트" aria-hidden="true">#</a> 학습 세트</h4><img width="1013" alt="image" src="https://user-images.githubusercontent.com/10396850/204988514-c219b5e5-3630-4c42-94be-65635d31979c.png"><h4 id="cnn은-어떻게-동작하는가-convolutional-연산은-어떻게-되는가" tabindex="-1"><a class="header-anchor" href="#cnn은-어떻게-동작하는가-convolutional-연산은-어떻게-되는가" aria-hidden="true">#</a> CNN은 어떻게 동작하는가? Convolutional 연산은 어떻게 되는가?</h4><ul><li>https://poloclub.github.io/cnn-explainer/ <img width="1322" alt="image" src="https://user-images.githubusercontent.com/10396850/204992068-622e232c-0838-4540-aa03-dfa977510c03.png"></li><li>Convolutional ?</li><li>pooling ?</li><li>CNN 시신경을 모방했지만 지금에 와서는 그렇게만 볼 수 없다</li><li>필터 :</li><li>커널 Kernel :</li><li>합성곱 Convolution</li><li>tf 공식 문서 cnn 가이드 : https://www.tensorflow.org/tutorials/images/cnn</li><li>tf 공식 문서 이미지 분류 https://www.tensorflow.org/tutorials/images/classification</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>model <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 입력층</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Conv2D<span class="token punctuation">(</span>filters<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">&#39;relu&#39;</span><span class="token punctuation">,</span> input_shape<span class="token operator">=</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>MaxPool2D<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Dropout<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Fully-connected layer</span>

<span class="token comment"># 출력층</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Dense<span class="token punctuation">(</span>?<span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">&#39;________&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="레이어-설정" tabindex="-1"><a class="header-anchor" href="#레이어-설정" aria-hidden="true">#</a> 레이어 설정</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>model <span class="token operator">=</span> Sequential<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 입력층</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Conv2D<span class="token punctuation">(</span>filters<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">&#39;relu&#39;</span><span class="token punctuation">,</span> input_shape<span class="token operator">=</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>MaxPool2D<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Dropout<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Conv2D<span class="token punctuation">(</span>filters<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">&#39;relu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>MaxPool2D<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Dropout<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Fully-connected layer</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Dense<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">&#39;relu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 출력층</span>
model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Dense<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> activation<span class="token operator">=</span><span class="token string">&#39;sigmoid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="모델요약" tabindex="-1"><a class="header-anchor" href="#모델요약" aria-hidden="true">#</a> 모델요약</h4><img width="731" alt="image" src="https://user-images.githubusercontent.com/10396850/204995101-9f16aaf2-25ba-4a8c-851f-60661b8294c5.png"><h4 id="텐서플로우와-케라스" tabindex="-1"><a class="header-anchor" href="#텐서플로우와-케라스" aria-hidden="true">#</a> 텐서플로우와 케라스</h4><ul><li>파이토치를 선호하는 분들도 있지만 텐서플로우가 케라스 API 도입하면서 좋아짐</li><li>프로덕트는 tf</li><li>연구는 파이토치</li></ul><h4 id="학습" tabindex="-1"><a class="header-anchor" href="#학습" aria-hidden="true">#</a> 학습</h4><ul><li>학습이 계속(에포크를 늘리면) 되면 loss 는 줄고 accuracy 는 는다. <img src="https://user-images.githubusercontent.com/10396850/205002980-67a944c2-7759-45ac-b669-48a319aa8678.png" alt="image"></li><li>https://asia02.app.backend.ai:10477/notebooks/02-malaria-cnn-basic-input.ipynb / backend.ai 이용 / 개인 로그인 필요 <img width="826" alt="image" src="https://user-images.githubusercontent.com/10396850/205003522-1f188f99-4ce8-45c7-8fee-a26eaa6310aa.png"></li></ul><h4 id="마지막-실습-75p-이미지-인식-경진대회-우승-알고리즘을-이용" tabindex="-1"><a class="header-anchor" href="#마지막-실습-75p-이미지-인식-경진대회-우승-알고리즘을-이용" aria-hidden="true">#</a> 마지막 실습 : 75p - 이미지 인식 경진대회 우승 알고리즘을 이용</h4><ul><li>2번째 실습과 모델 부분만 바꾸어 쓴다 vcc / - 전이학습(Transfer Learning) - 파라미터값만 조정해서 쓸수 있도록 만들어 두엇다.</li><li>https://drive.google.com/file/d/14qymHoNxc3kYJRxaISIFm1OmSRdhO4KB/view?usp=share_link</li><li>AlexNet 26% 오류를 16% 까지 감소</li><li>AlexNet 이후 층을 깊게 쌓는 모델이 등장했다.</li><li>딥러닝은 비정형에서 좋은 성능을 정형은 부스팅계열을 사용</li><li>정형 -&gt; 사람이 처리하여 넣어줌</li><li>비정형 -&gt; 알아서!</li><li><a href="03-malaria-vgg-resnet-output.ipynb">03-malaria-vgg-resnet-output.ipynb</a></li><li><a href="02-malaria-cnn-basic-output.ipynb">02-malaria-cnn-basic-output.ipynb</a></li><li></li></ul><h4 id="backend-ai-1" tabindex="-1"><a class="header-anchor" href="#backend-ai-1" aria-hidden="true">#</a> Backend.AI</h4><ul><li>https://cloud.backend.ai <img width="1561" alt="image" src="https://user-images.githubusercontent.com/10396850/205005801-82f9d0c8-3516-4e50-b839-6439e1ed9d7d.png"><img width="1561" alt="image" src="https://user-images.githubusercontent.com/10396850/205005993-4b72f559-ee5a-44e0-8222-6b96923f15bf.png"><img width="984" alt="image" src="https://user-images.githubusercontent.com/10396850/205005269-04bbdcfd-8e0a-4901-822d-68e893cb7206.png"></li></ul><h4 id="blank-answer-sheet" tabindex="-1"><a class="header-anchor" href="#blank-answer-sheet" aria-hidden="true">#</a> blank answer sheet</h4><p><strong>**</strong>_<strong>**</strong>*1 : ImageDataGenerator</p><h4 id="오늘의코드" tabindex="-1"><a class="header-anchor" href="#오늘의코드" aria-hidden="true">#</a> 오늘의코드</h4>`,23),A={href:"https://www.youtube.com/todaycode",target:"_blank",rel:"noopener noreferrer"},B=n("img",{src:c,alt:"todaycode"},null,-1),V=s('<h4 id="lablup-goods" tabindex="-1"><a class="header-anchor" href="#lablup-goods" aria-hidden="true">#</a> lablup goods</h4><div class="custom-container tip"><p class="custom-container-title">The best chooses the best</p><p>송월타월! 게임끝 역시 업계 최고 파이썬 괴수님들 회사다움 그리고 그냥 송월타월이 아니다 수가 보통이 아니다. 아는 사람은 안다!</p></div><p><img src="'+u+'" alt="lablup goods"></p><h4 id="lab-l-up-conf-2" tabindex="-1"><a class="header-anchor" href="#lab-l-up-conf-2" aria-hidden="true">#</a> lab l up &gt; /conf/2</h4>',4),P={class:"custom-container warning"},S=n("p",{class:"custom-container-title"},"lablup 2번째 개발자 컨퍼런스",-1),E=n("li",null,[n("p",null,"온라인으로 첫번째!")],-1),G=n("li",null,[n("p",null,"박조은님의 Backend.AI 실습세션이 워낙 막강하여 트랙1의 명강을 놓침 - 다음에는 오전 발표 오후 실습이면 혼자 다 취할 수 있는디 어흥~")],-1),L=n("li",null,[n("p",null,"쉬는 시간 마다 선물을 주셔서 소소한 감동")],-1),O={href:"https://github.com/achimnol",target:"_blank",rel:"noopener noreferrer"},T={href:"https://jmagazine.joins.com/forbes/view/336300",target:"_blank",rel:"noopener noreferrer"},F=n("li",null,[n("p",null,"3XL 래블업 후드티는 아깝게 다른 2분에게 ~ 3번째 행사에도 꼭 참가!")],-1),R=n("li",null,[n("p",null,"선정릉이 보이는 테라스 춥지만 끝나고 간단한 피맥이라고 했더라면 !")],-1),M=n("p",null,[n("img",{src:r,alt:"lablup-con-1"}),n("img",{src:d,alt:"lablup-con-2"}),n("img",{src:m,alt:"lablup-con-3"})],-1);function q(z,j){const e=i("ExternalLinkIcon");return l(),o("div",null,[h,n("ul",null,[b,n("li",null,[n("p",null,[n("a",g,[a("피할 수 없으면 즐겨라 lab | up > /conf/2"),t(e)]),v])]),_]),f,n("ul",null,[n("li",null,[n("p",null,[a("overfitting => 학원 모의고사는 100점 맞음 학교가서 60점 맞음 - 난 학원교육에 overfitting 됨 / "),n("a",w,[a("사교육 없는 세상"),t(e)])])]),x]),y,n("ul",null,[I,n("li",null,[n("p",null,[a("최근 스타트업 "),n("a",C,[a("아트랩"),t(e)]),a(" ...")])]),N]),D,n("ul",null,[n("li",null,[n("p",null,[n("a",A,[a("박조은"),t(e)]),a(" 선생님 여러운거 쉽게 설명해 주셔서 감사합니다. 역시 어렵지만 못피하니 즐겨야죠. 하하하 "),B]),V,n("div",P,[S,n("ul",null,[E,G,L,n("li",null,[n("p",null,[a("테터툴즈 만드신!!! 후덜덜 "),n("a",O,[a("CTO"),t(e)]),a(" !!!")])]),n("li",null,[n("p",null,[a("파이콘등 무수한 컨퍼런스에서 인상 깊고 수준 높은 발표로 유명한 "),n("a",T,[a("인공지능 기술의 민주화"),t(e)]),a(" 뇌 연구 물리학자 출신 대표님의 자봉스킬 찰칵찰칵")])]),F,R])]),M])])])}const K=p(k,[["render",q],["__file","index.html.vue"]]);export{K as default};
